--Cambia la sesion al pluggable DB. Este script debe de ser corrido con user que tenga SYSDBA grants
ALTER DATABASE OPEN;
ALTER SESSION SET container = orclpdb;


set serveroutput on;

--Esto elimina le usuario y todos sus objetos. Permite recrear todos los objetos facilmente.
DECLARE
    v_count     INTEGER := 0;
    v_statement VARCHAR2(500);
BEGIN
    SELECT
        COUNT(1)
    INTO v_count
    FROM
        dba_users
    WHERE
        username = upper('NEGOCIO');

    IF v_count != 0 THEN
        EXECUTE IMMEDIATE ( 'DROP USER NEGOCIO CASCADE' );
    END IF;
    v_count := 0;
END;

CREATE USER NEGOCIO IDENTIFIED BY NEGOCIO;
GRANT CREATE SESSION, CREATE VIEW, ALTER SESSION, CREATE SEQUENCE,RESTRICTED SESSION TO NEGOCIO;
GRANT CREATE SYNONYM, CREATE DATABASE LINK, RESOURCE , UNLIMITED TABLESPACE TO NEGOCIO;
--SELECT USERNAME, DEFAULT_TABLESPACE, TEMPORARY_TABLESPACE, CREATED FROM DBA_USERS WHERE USERNAME ='NEGOCIO';

--Se selecciona el nuevo usuario como schema default
ALTER SESSION SET CURRENT_SCHEMA=NEGOCIO;

--Creacion de tablas
CREATE TABLE  TAB_TIPOS_PERSONA(
ID_TIPO_PERSONA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(30),
PRIMARY KEY(ID_TIPO_PERSONA)
);

CREATE TABLE  TAB_ROLES(
ID_ROLE NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(30),
PRIMARY KEY(ID_ROLE)
);


CREATE TABLE TAB_ESTADOS_USUARIO(
ID_ESTADO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(30),
PRIMARY KEY(ID_ESTADO)
);

CREATE TABLE TAB_PERSONAS(
ID_PERSONA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
CEDULA NUMBER UNIQUE NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
PRIMER_APELLIDO VARCHAR2(30) NOT NULL,
SEGUNDO_APELLIDO VARCHAR2(30),
DIRECCION VARCHAR2(100),
EMAIL VARCHAR2(50),
TELEFONO VARCHAR2(15) NOT NULL,
TIPO_PERSONA_ID NUMBER,
PRIMARY KEY(ID_PERSONA),
CONSTRAINT PK_TAB_PERSONAS_TAB_TIPOS_PERSONA FOREIGN KEY(TIPO_PERSONA_ID) REFERENCES TAB_TIPOS_PERSONA);


CREATE TABLE TAB_USUARIOS(
ID_USUARIO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE_USUARIO VARCHAR2(30) NOT NULL,
NOMBRE VARCHAR2(30) NOT NULL,
PRIMER_APELLIDO VARCHAR2(30) NOT NULL,
SEGUNDO_APELLIDO VARCHAR2(30) NOT NULL,
EMAIL VARCHAR2(50),
CONTRASENA VARCHAR2(20),
TELEFONO VARCHAR2(15) NOT NULL,
ROLE_ID NUMBER,
ESTADO_ID NUMBER,
PRIMARY KEY(ID_USUARIO),
CONSTRAINT PK_TAB_USUARIOS_TAB_ROLES FOREIGN KEY(ROLE_ID) REFERENCES TAB_ROLES,
CONSTRAINT PK_TAB_USUARIOS_TAB_ESTADOS FOREIGN KEY(ESTADO_ID) REFERENCES TAB_ESTADOS_USUARIO);


CREATE TABLE TAB_CATEGORIAS(
ID_CATEGORIA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(50),
CATEGORIA_MADRE_ID NUMBER,
PRIMARY KEY(ID_CATEGORIA),
CONSTRAINT PK_TAB_CATEGORIAS_TAB_CATEGORIAS FOREIGN KEY(CATEGORIA_MADRE_ID) REFERENCES TAB_CATEGORIAS);


CREATE TABLE TAB_MARCAS(
MARCA_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(50),
PRIMARY KEY(MARCA_ID));

CREATE TABLE TAB_UNIDADES_CANTIDAD(
ID_UNIDAD_CANTIDAD NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(30),
PRIMARY KEY(ID_UNIDAD_CANTIDAD)
);

CREATE TABLE TAB_PRODUCTOS(
ID_PRODUCTO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
CATEGORIA_ID NUMBER,
MARCA_ID NUMBER,
NOMBRE VARCHAR2(30),
DETALLE VARCHAR2(50),
PRECIO NUMBER(8, 2) NOT NULL,
TAMANO VARCHAR2(20),
UNIDAD_CANTIDAD_ID NUMBER,
CANTIDAD NUMBER(5),
PRIMARY KEY(ID_PRODUCTO),
CONSTRAINT PK_TAB_PRODUCTOS_TAB_CATEGORIAS FOREIGN KEY(CATEGORIA_ID) REFERENCES TAB_CATEGORIAS,
CONSTRAINT PK_TAB_PRODUCTOS_TAB_MARCAS FOREIGN KEY(MARCA_ID) REFERENCES TAB_MARCAS,
CONSTRAINT PK_TAB_PRODUCTOS_TAB_UNIDADES_CANTIDAD FOREIGN KEY(UNIDAD_CANTIDAD_ID) REFERENCES TAB_UNIDADES_CANTIDAD);

CREATE TABLE TAB_TIPOS_VENTA(
ID_TIPO_VENTA NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(30),
PRIMARY KEY(ID_TIPO_VENTA)
);

CREATE TABLE TAB_MEDIOS_PAGO(
ID_MEDIO_PAGO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
NOMBRE VARCHAR2(30),
PRIMARY KEY(ID_MEDIO_PAGO)
);

CREATE TABLE TAB_FACTURAS (
ID_FACTURA NUMBER NOT NULL,
VENDEDOR_ID NUMBER,
CLIENTE_ID NUMBER,
TIPO_VENTA_ID NUMBER,
TOTAL_ENTREGA NUMBER (8,2),
TOTAL NUMBER(8, 2),
MEDIO_PAGO_ID NUMBER,
FECHA_HORA_VENTA TIMESTAMP DEFAULT SYSDATE,
CONSTRAINT PK_TAB_FACTURAS PRIMARY KEY(ID_FACTURA),
CONSTRAINT PK_TAB_FACTURAS_TAB_USUARIOS FOREIGN KEY(VENDEDOR_ID) REFERENCES TAB_USUARIOS,
CONSTRAINT PK_TAB_FACTURAS_TAB_PERSONAS FOREIGN KEY(CLIENTE_ID) REFERENCES TAB_PERSONAS,
CONSTRAINT PK_TAB_FACTURAS_TAB_TIPOS_VENTA FOREIGN KEY(TIPO_VENTA_ID) REFERENCES TAB_TIPOS_VENTA,
CONSTRAINT PK_TAB_FACTURAS_TAB_MEDIOS_PAGO FOREIGN KEY(MEDIO_PAGO_ID) REFERENCES TAB_MEDIOS_PAGO);

CREATE TABLE TAB_DETALLES_FACTURA(
ID_FACTURA NUMBER NOT NULL,
ID_DETALLE NUMBER NOT NULL, 
PRODUCTO_ID NUMBER, 
CANTIDAD NUMBER(2), 
PRECIO NUMBER(8, 2),
TOTAL_SIN_IVA NUMBER(8, 2),
IVA NUMBER(2,2),
SUBTOTAL NUMBER(8, 2),
PRIMARY KEY(ID_FACTURA,ID_DETALLE), 
CONSTRAINT PK_TAB_DETALLES_FACTURA_TAB_FACTURAS FOREIGN KEY(ID_FACTURA) REFERENCES TAB_FACTURAS,
CONSTRAINT PK_TAB_DETALLES_FACTURA_TAB_PRODUCTOS FOREIGN KEY(PRODUCTO_ID) REFERENCES TAB_PRODUCTOS);

INSERT INTO TAB_TIPOS_PERSONA (NOMBRE) VALUES ('Colaborador Interno');
INSERT INTO TAB_TIPOS_PERSONA (NOMBRE) VALUES ('Cliente');
INSERT INTO TAB_TIPOS_PERSONA (NOMBRE) VALUES ('Proveedor');

INSERT INTO TAB_ESTADOS_USUARIO (NOMBRE) VALUES ('Activo');
INSERT INTO TAB_ESTADOS_USUARIO (NOMBRE) VALUES ('Bloqueado');

INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (117380925,'Shreya','Mcdonald','Strickland','Whitefield View','Shreya@gmail.com','86543422',1);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (168549854,'Xaver','Berry','Mejia','Whitefield View','Xaver@gmail.com','86423531',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (258216514,'Eduard','Fernandez','Palmer','Port Riddell','Eduard@gmail.com','832341',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (296853265,'Dipti','Thompson','Alexander','Fell Heath','Dipti@gmail.com','83153431',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (375481256,'Nuria','Davidson','Mann','Thirlwall Drive','Nuria@gmail.com','83234133',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (596587455,'Ketut','Ramirez','Wise','Southburn Terrace','Ketut@gmail.com','64234131',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (436589754,'Wolfgang','Stevenson','Thornton','Oakley Paddock','Wolfgang@gmail.com','83134133',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (556895687,'Subrahmanya','Burns','Khan','Williamson Bank','Subrahmanya@gmail.com','64354212',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (656895845,'Ptah','Robinson','Kaye','Holden Elms','Ptah@gmail.com','86434231',2);
INSERT INTO TAB_PERSONAS (CEDULA,NOMBRE,PRIMER_APELLIDO,SEGUNDO_APELLIDO,DIRECCION,EMAIL,TELEFONO,TIPO_PERSONA_ID) VALUES (736524558,'Barbara','Kirby','Rossi','Crispin Coppice','Barbara@gmail.com','75331243',2);
 
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Ropa','');  --1
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Perfumes','');--2
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Licores',''); --3
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Camisas',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Pantalonetas',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Zapatos',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Camisetas',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Vino',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Pantalonetas',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Zapatos',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Camisetas',1);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Perfumes Hombre',2);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Perfumes Mujer',2);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Whisky',3);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Tipo licor 2',3);
INSERT INTO TAB_CATEGORIAS  (NOMBRE,CATEGORIA_MADRE_ID) VALUES ('Tipo licor 3',3);

INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Nike');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Adidas');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Puma');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Bocceli');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('CHANEL');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('HERMES Paris');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('ck');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Hugo BOSS');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Jack Daniels');
INSERT INTO TAB_MARCAS (NOMBRE) VALUES ('Johhny Walker');

INSERT INTO TAB_TIPOS_VENTA(NOMBRE) VALUES ('Contado');
INSERT INTO TAB_TIPOS_VENTA(NOMBRE) VALUES ('Credito');


INSERT INTO TAB_MEDIOS_PAGO(NOMBRE) VALUES ('Tarjeta');
INSERT INTO TAB_MEDIOS_PAGO(NOMBRE) VALUES ('Efectivo');
INSERT INTO TAB_MEDIOS_PAGO(NOMBRE) VALUES ('Cheque');
INSERT INTO TAB_MEDIOS_PAGO(NOMBRE) VALUES ('Transferencia');
INSERT INTO TAB_MEDIOS_PAGO(NOMBRE) VALUES ('Sinpe');

/*
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,2);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,2);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,3);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,4);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,6);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,4);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,7);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,8);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,10);
INSERT INTO FACTURAS (VENDEDOR_ID, CLIENTE_ID, TOTAL) VALUES (1,9);

INSERT INTO DETALLES (ID_FACTURA,PRODUCTO_ID,CANTIDAD) VALUES (1, 1, 1);
INSERT INTO DETALLES (ID_FACTURA,PRODUCTO_ID,CANTIDAD) VALUES (1, 2, 4);
INSERT INTO DETALLES (ID_FACTURA,PRODUCTO_ID,CANTIDAD) VALUES (1, 3, 2);
INSERT INTO DETALLES (ID_FACTURA,PRODUCTO_ID,CANTIDAD) VALUES (1, 4, 1);
INSERT INTO DETALLES (ID_FACTURA,PRODUCTO_ID,CANTIDAD) VALUES (1, 5, 2);
*/

--View para hacer Detalles legible
CREATE OR REPLACE VIEW V_DETALLES_FACTURA AS 
SELECT DET.ID_FACTURA, DET.ID_DETALLE, PROD.PRECIO, DET.CANTIDAD, UNI.NOMBRE FROM TAB_DETALLES_FACTURA DET
LEFT JOIN TAB_PRODUCTOS PROD ON 
DET.PRODUCTO_ID = PROD.ID_PRODUCTO
LEFT JOIN TAB_UNIDADES_CANTIDAD UNI
ON PROD.UNIDAD_CANTIDAD_ID = UNI.ID_UNIDAD_CANTIDAD;


-- Obtener la factura maxima existente
CREATE OR REPLACE PROCEDURE SP_GET_MAX_FACTURA (V_MAX_FACTURA OUT NUMBER) AS 
DECLARE 
V_MAX_FACTURA NUMBER;
BEGIN
SELECT MAX(ID_FACTURA) INTO V_MAX_FACTURA FROM FACTURAS;
END;

-- Obtener el detalle maximo de una factura en especifico
CREATE OR REPLACE PROCEDURE SP_GET_MAX_DETALLE_EN_FACTURA (IN_ID_FACTURA IN NUMBER , OUT_MAX_DETALLE OUT NUMBER) AS 
BEGIN
SELECT MAX(ID_DETALLE) INTO OUT_MAX_DETALLE 
FROM DETALLES DET
WHERE DET.ID_FACTURA = IN_ID_FACTURA;
END;



CREATE OR REPLACE PROCEDURE SP_INSERTAR_FACTURA (IN_ID_VENDEDOR IN NUMBER, IN_ID_CLIENTE IN NUMBER, IN_ESTADO_ID IN NUMBER, IN_TOTAL_ENTREGA IN NUMBER) AS

DECLARE
V_MAX_FACTURA NUMBER;
V_NEW_ID_FACTURA NUMBER;
V_FECHA TIMESTAMP := SYSDATE;

v_TOTAL_PRODUCTOS NUMBER (8,2);
v_TOTAL_ANTES_IVA DECIMAL (8, 2);
v_TOTAL_IVA DECIMAL(8, 2);
v_TOTAL_FACTURA DECIMAL(8, 2);
TOTAL_ENTREGA NUMBER (8,2);
TOTAL_ANTES_IVA  NUMBER (8,2);
TOTAL NUMBER(8, 2);

BEGIN
SP_GET_MAX_FACTURA(V_MAX_FACTURA);
V_NEW_ID_FACTURA := V_MAX_FACTURA +1;
        
INSERT INTO FACTURAS (ID_FACTURA, VENDEDOR_ID, CLIENTE_ID, ESTADO_ID, TOTAL_ENTREGA, TOTAL_ANTES_IVA, TOTAL, FECHA) 
VALUES (V_NEW_ID_FACTURA, IN_ID_VENDEDOR, IN_ID_CLIENTE, IN_ESTADO_ID, IN_TOTAL_ENTREGA, 0, 0, V_FECHA);  


END; 
----------------------------------------------------------------------------------------------

-- View de PERSONAS
CREATE OR REPLACE VIEW V_PERSONAS AS
SELECT
ID_PERSONA, PER.NOMBRE, PRIMER_APELLIDO, SEGUNDO_APELLIDO, DIRECCION, EMAIL, TELEFONO, CONTRASENA, R.NOMBRE AS ROLE, E.NOMBRE AS ESTADO 
FROM PERSONAS PER
LEFT JOIN TAB_ROLES R ON PER.ROLE_ID = R.ID_ROLE
LEFT JOIN ESTADOS E ON PER.ESTADO_ID = E.ID_ESTADO;



--Devolver categoria en base a un id
CREATE OR REPLACE PROCEDURE SP_CATEGORIA_FROM_ID (V_ID_CAT IN NUMBER, CATEGORIA OUT VARCHAR2) AS
BEGIN
SELECT NOMBRE INTO CATEGORIA FROM CATEGORIAS WHERE ID_CATEGORIA = V_ID_CAT;
END;


DECLARE
X VARCHAR2(50);
BEGIN
SP_CATEGORIA_FROM_ID (1, X);
dbms_output.put_line(X);
END;


--Devolver todas las categorias principales
CREATE OR REPLACE PROCEDURE SP_CATEGORIAS (V_ID_CAT IN NUMBER, CATS OUT SYS_REFCURSOR)
AS
BEGIN
OPEN CATS FOR SELECT NOMBRE FROM CATEGORIAS WHERE ID_CATEGORIA IS NOT NULL;
END;

--Devolver todas las subcategorias que pertenezcan a una categoria en especifico
CREATE OR REPLACE PROCEDURE SP_SUBCATS_FROM_CAT (V_ID_CAT IN NUMBER, SUB_CATS OUT SYS_REFCURSOR)
AS
BEGIN
OPEN SUB_CATS FOR SELECT NOMBRE FROM CATEGORIAS WHERE CATEGORIA_MADRE_ID= V_ID_CAT;
END;

--Devolver personas que pertenezcan a un role en especifico
CREATE OR REPLACE PROCEDURE SP_PERSONAS_POR_ROLE (V_ID_ROLE IN NUMBER, PERSONA OUT SYS_REFCURSOR)
AS
BEGIN
OPEN PERSONA FOR 
SELECT PER.NOMBRE, PER.PRIMER_APELLIDO, PER.SEGUNDO_APELLIDO, PER.DIRECCION, PER.EMAIL, PER.TELEFONO, PER.ESTADO, PER.ROLE
FROM V_PERSONAS PER 
JOIN PERSONAS ON PERSONAS.ID_PERSONA =  PER.ID_PERSONA
WHERE PERSONAS.ROLE_ID = V_ID_ROLE;
END;

--Devolver estados
CREATE OR REPLACE PROCEDURE SP_GET_ESTADOS (ESTADOS OUT SYS_REFCURSOR)
AS
BEGIN
OPEN ESTADOS FOR 
SELECT NOMBRE
FROM ESTADOS;
END;

CREATE OR REPLACE VIEW V_CATEGORIAS_MADRE AS
SELECT ID_CATEGORIA, NOMBRE FROM CATEGORIAS WHERE CATEGORIA_MADRE_ID IS NULL;

SELECT * FROM V_CATEGORIAS_MADRE;

SELECT * FROM USER_TABLES;










